buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	/**
	 * querydsl 추가
	 */
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

	id 'java'
}

group = 'com.wiken'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/**
	 * h2 데이터베이스 추가 (2022.04.18)
	 * 	- H2 버전 1.4.198 이상에서는 데이터베이스를 미리 생성하는 것을 방지하도록 설정
	 * 	- 버전이 높으면 데이터베이스 자동 생성 안됨
	 * 	- 테스트용 DB
	 */
	runtimeOnly 'com.h2database:h2:1.4.197'

	/**
	 * validation 추가 (2022.04.18)
	 */
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.6'

	/**
	 * Model Mapper 추가 (2022.04.18)
	 */
	implementation 'org.modelmapper:modelmapper:3.1.0'

	/**
	 * 타임리프 추가 (2022.04.18)
	 * 	- thymeleaf-extras-springsecurity5 추가 (2022.04.20)
	 */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	/**
	 * spring security 추가 (2022.04.20)
	 */
	implementation 'org.springframework.boot:spring-boot-starter-security:2.6.6'

	/**
	 * mariaDB 라이브러리 추가 (2022.4.23)
	 */
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'

	/**
	 * Query Dsl 라이브러리 추가 (2022.4.24)
	 */
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
